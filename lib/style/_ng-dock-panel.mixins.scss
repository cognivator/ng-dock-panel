@import './ng-dock-panel.theme';

// Helpers
@function invertPosition($position) {
  $positionMap: ('top': bottom, 'bottom': top, 'left': right, 'right': left);

  @return map-get($positionMap, $position);
}


@mixin translate-justification ($dockPosition, $handlePosition: 'center') {
  $transformMap: ('top': translateX, 'bottom': translateX, 'left': translateY, 'right': translateY);
  $transformFunction: map-get($transformMap, $dockPosition);

  $translateMap: ('center': 50%, 'left': 0, 'right': 0);
  $translateAmount: map-get($translateMap, $handlePosition);

  $justifyPosMap: ('top': ('left': 'left', 'center': 'left', 'right': 'right'),
      'bottom': ('left': 'left', 'center': 'left', 'right': 'right'),
      'left': ('left': 'bottom', 'center': 'top', 'right': 'top'),
      'right': ('left': 'top', 'center': 'top', 'right': 'bottom')
  );
  $justifyPosition: map-get(map-get($justifyPosMap, $dockPosition), $handlePosition);

  #{$justifyPosition}: $translateAmount;
  transform: unquote('#{$transformFunction}' + '(' + -$translateAmount + ')');
}


@mixin dock-resize-handle-placement($dockPosition, $handlePosition: 'center') {

  #{invertPosition($dockPosition)}: -$dock-resize-handle-size;
}

@mixin dock-resize-handle-dimensions($dockPosition) {

  $l1: $dock-resize-handle-size;
  $l2: 100%;

  $dimensionMap: ('top': ('height': $l1, 'width': $l2),
      'bottom': ('height': $l1, 'width': $l2),
      'left': ('width': $l1, 'height': $l2),
      'right': ('width': $l1, 'height': $l2)
  );

  height: map-get(map-get($dimensionMap, $dockPosition), 'height');
  width: map-get(map-get($dimensionMap, $dockPosition), 'width');
}


@mixin dock-collapse-handle-placement($dockPosition, $handlePosition: 'center') {
  // handlePosition: center, left, or right
  //
  // For vertical layout panels (top and bottom), the positions are used directly
  // For horizontal layout panels (left and right), the positions translate to:
  //    left -> bottom (for left dockPosition), top (for right dockPosition)
  //    right -> top (for left dockPosition), bottom (for right dockPosition)

  $absolutePosition: $dockPosition;

  position: absolute;
  #{$absolutePosition}: $dock-collapse-handle-margin;

  @include translate-justification($dockPosition, $handlePosition);
}

@mixin dock-collapse-handle-dimensions($dockPosition) {

  $l1: ($dock-collapse-handle-size - ($dock-collapse-handle-margin * 2));
  $l2: ($dock-collapse-handle-size * $dock-collapse-handle-apsect);

  $dimensionMap: ('top': ('height': $l1, 'width': auto, 'min-height': 0, 'min-width': $l2),
      'bottom': ('height': $l1, 'width': auto, 'min-height': 0, 'min-width': $l2),
      'left': ('width': $l1, 'height': auto, 'min-width': 0, 'min-height': $l2),
      'right': ('width': $l1, 'height': auto, 'min-width': 0, 'min-height': $l2)
  );

  min-height: map-get(map-get($dimensionMap, $dockPosition), 'min-height');
  height: map-get(map-get($dimensionMap, $dockPosition), 'height');

  min-width: map-get(map-get($dimensionMap, $dockPosition), 'min-width');
  width: map-get(map-get($dimensionMap, $dockPosition), 'width');
}


@mixin dock-style-generator($dockPosition, $handlePosition: 'center') {
  .dock-#{$dockPosition} {
    margin-#{invertPosition($dockPosition)}: $dock-margin--normal;

    &[dock-resizable] {
      border-#{invertPosition($dockPosition)}-width: $dock-border-width--resizable;

      .dock-resize-handle {
        @include dock-resize-handle-placement($dockPosition, $handlePosition);

        @include dock-resize-handle-dimensions($dockPosition);
      }
    }

    &[dock-collapsible] {
      border-#{invertPosition($dockPosition)}-width: $dock-border-width--collapsible;

      .dock-collapse-handle {

        #{invertPosition($dockPosition)}: -($dock-collapse-handle-size - $dock-collapse-handle-margin);

        @include translate-justification($dockPosition, $handlePosition);

        @include dock-collapse-handle-dimensions($dockPosition);

        &::before {
          @include dock-collapse-handle-placement($dockPosition, $handlePosition);
        }
      }
    }

    // let resizable be the final word on border color
    &[dock-resizable] {
      border-#{invertPosition($dockPosition)}-color: $dock-border-color--resizable;
    }
  }
}
